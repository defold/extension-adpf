local function get_thermal_data(self)
	local headroom = adpf.thermal.get_headroom(2)
	print("thermal headroom", headroom)
	local status = adpf.thermal.get_status()
	print("thermal status", status)
end

function init(self)
	if adpf then
		pprint(adpf)
		msg.post(".", "acquire_input_focus")
		local hint_available = adpf.hint.init((1 / 60) * 1000 * 1000)
		print("performance hint availability:", hint_available)

		local thermal_available = adpf.thermal.init()
		print("thermal api availability:", thermal_available)
		if thermal_available then
			get_thermal_data(self)
			timer.delay(10, true, get_thermal_data)
		end
	end
end

function on_input(self, action_id, action)
	if action.pressed then
		adpf.hint.update_target_fps((1 / 30) * 1000 * 1000)
	elseif action.released then
		adpf.hint.update_target_fps((1 / 60) * 1000 * 1000)
	end
end